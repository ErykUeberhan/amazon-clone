{"ast":null,"code":"export const initialState = {\n  basket: [],\n  user: null\n};\nexport const getBasketTotal = basket => basket.reduce((amount, item) => item.price + amount, 0);\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'SET_USER':\n      return { ...state,\n        user: action.user\n      };\n\n    case 'ADD_TO_BASKET':\n      return { ...state,\n        basket: [...state.basket, action.item]\n      };\n\n    case 'REMOVE_FROM_BASKET':\n      let newBasket = [...state.basket];\n      const index = state.basket.findIndex(basketItem => basketItem.id === action.id);\n\n      if (index >= 0) {\n        newBasket.splice(index, 1);\n      } else {\n        console.warn(`Cant remove product ${action.id}`);\n      }\n\n      return { ...state,\n        basket: newBasket\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/eryko/Desktop/ReactProjects/amazon-clone/src/reducer.js"],"names":["initialState","basket","user","getBasketTotal","reduce","amount","item","price","reducer","state","action","type","newBasket","index","findIndex","basketItem","id","splice","console","warn"],"mappings":"AAAA,OAAO,MAAMA,YAAY,GAAG;AACxBC,EAAAA,MAAM,EAAE,EADgB;AAExBC,EAAAA,IAAI,EAAE;AAFkB,CAArB;AAKP,OAAO,MAAMC,cAAc,GAAIF,MAAD,IAAYA,MAAM,CAACG,MAAP,CAAc,CAACC,MAAD,EAASC,IAAT,KAAkBA,IAAI,CAACC,KAAL,GAAaF,MAA7C,EAAqD,CAArD,CAAnC;;AAGP,SAASG,OAAT,CAAiBC,KAAjB,EAAwBC,MAAxB,EAAgC;AAC5B,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,UAAL;AACI,aAAO,EACH,GAAGF,KADA;AAEHP,QAAAA,IAAI,EAAEQ,MAAM,CAACR;AAFV,OAAP;;AAIJ,SAAK,eAAL;AACI,aAAO,EACH,GAAGO,KADA;AAEHR,QAAAA,MAAM,EAAE,CAAC,GAAGQ,KAAK,CAACR,MAAV,EAAkBS,MAAM,CAACJ,IAAzB;AAFL,OAAP;;AAIJ,SAAK,oBAAL;AACI,UAAIM,SAAS,GAAG,CAAC,GAAGH,KAAK,CAACR,MAAV,CAAhB;AACA,YAAMY,KAAK,GAAGJ,KAAK,CAACR,MAAN,CAAaa,SAAb,CAAwBC,UAAD,IAAgBA,UAAU,CAACC,EAAX,KAAkBN,MAAM,CAACM,EAAhE,CAAd;;AAEA,UAAIH,KAAK,IAAI,CAAb,EAAgB;AACZD,QAAAA,SAAS,CAACK,MAAV,CAAiBJ,KAAjB,EAAwB,CAAxB;AACH,OAFD,MAEO;AACHK,QAAAA,OAAO,CAACC,IAAR,CACK,uBAAsBT,MAAM,CAACM,EAAG,EADrC;AAGH;;AAED,aAAO,EAAE,GAAGP,KAAL;AAAYR,QAAAA,MAAM,EAAEW;AAApB,OAAP;;AACJ;AACI,aAAOH,KAAP;AAzBR;AA2BH;;AAED,eAAeD,OAAf","sourcesContent":["export const initialState = {\r\n    basket: [],\r\n    user: null\r\n};\r\n\r\nexport const getBasketTotal = (basket) => basket.reduce((amount, item) => item.price + amount, 0);\r\n\r\n\r\nfunction reducer(state, action) {\r\n    switch (action.type) {\r\n        case 'SET_USER':\r\n            return {\r\n                ...state,\r\n                user: action.user\r\n            }\r\n        case 'ADD_TO_BASKET':\r\n            return {\r\n                ...state,\r\n                basket: [...state.basket, action.item],\r\n            };\r\n        case 'REMOVE_FROM_BASKET':\r\n            let newBasket = [...state.basket];\r\n            const index = state.basket.findIndex((basketItem) => basketItem.id === action.id);\r\n\r\n            if (index >= 0) {\r\n                newBasket.splice(index, 1);\r\n            } else {\r\n                console.warn(\r\n                    `Cant remove product ${action.id}`\r\n                )\r\n            }\r\n\r\n            return { ...state, basket: newBasket };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}